import java.util.*;

class DataBase {

    private Map userData = new HashMap();
    private final String ADMIN_ID = "admin";
    private final String ADMIN_PW = "admin";
    private boolean isLoggedIn;
    private boolean isADMIN;
    private String currentUser;
    private int count;

    public boolean register() {
        System.out.println("사용할 아이디를 입력해주세요.");
        String id = new Scanner(System.in).nextLine().trim().toLowerCase();
        System.out.println("사용할 비밀번호를 입력해주세요.");
        String pw = new Scanner(System.in).nextLine().trim().toLowerCase();

        if (userData.containsKey(id)) {
            System.out.println("이미 있는 아이디입니다.");
            return false;
        }

        userData.put(id, pw);
        System.out.println(isADMIN() ? "관리자 권한으로 계정을 생성했습니다.":"회원가입에 성공했습니다.");
        return true;
    }

    public boolean register(String id, String pw) {

        if (userData.containsKey(id)) {
            System.out.println("이미 있는 아이디입니다.");
            return false;
        }

        userData.put(id, pw);
        return true;
    }

    public boolean logIn(String id, String pw) {
        if (!userData.containsKey(id)) {
            System.out.println("없는 아이디 입니다.");
            return false;
        }

        if (userData.get(id).equals(pw)) {
            System.out.println("로그인에 성공했습니다.");
            currentUser=id;
            isLoggedIn = true;
            return true;
        } else {
            System.out.println("비밀번호가 틀렸습니다.");
            return false;
        }

    }

    public boolean changePW(){
        System.out.println("현재 비밀번호를 입력해주세요. >>");
        String oldPW = new Scanner(System.in).nextLine().trim().toLowerCase();

        if (userData.get(currentUser).equals(oldPW)){

            System.out.println("새로운 비밀번호를 입력해주세요. >>");
            String newPW = new Scanner(System.in).nextLine().trim().toLowerCase();

            userData.put(currentUser, newPW);
            System.out.println("비밀번호를 변경했습니다.");
            return true;
        } else {
            System.out.println("현재 비밀번호를 잘 못 입력하셨습니다.");
            return false;
        }
    }

    public boolean adminLogIn(String id, String pw) {
        if (count > 5) {
            System.out.println("※※※※※※ 시도 횟수를 초과했습니다. ※※※※※※");
            System.out.println("※※※※※※ 보안시스템 작동중 ※※※※※※");
            while (true) {
                System.out.println("※※※※※※ 모든 시스템을 멈춥니다. ※※※※※※");
            }
        }

        if (id.equals(ADMIN_ID) && pw.equals(ADMIN_PW)) {
            count=0;
            logOut();
            isLoggedIn = true;
            isADMIN = true;
            System.out.println("※※※※※※ 관리자 로그인 성공 ※※※※※※");
            System.out.println();
            return true;
        } else {
            System.out.println("※※※※※※ 로그인 실패 ※※※※※※");
            count++;
            return false;
        }
    }

    public boolean isADMIN() {
        return isADMIN;
    }

    public boolean isLoggedIn() {
        return isLoggedIn;
    }

    public boolean logOut() {
        System.out.println("로그아웃에 성공했습니다.");
        currentUser="";
        adminLogOut();
        return isLoggedIn=false;
    }

    private boolean adminLogOut(){
        return isADMIN=false;
    }

    public void getUserDate(){
        if (!isADMIN()){
            System.out.println("잘못된 접근입니다.");
            return;
        }
        Set set = userData.entrySet();
        System.out.println(set);
    }

    public void getUserInfo(){
        if (isLoggedIn && !isADMIN){
            System.out.println("현재 로그인 계정은 " + currentUser + "입니다.");
        } else if (isLoggedIn && isADMIN){
            System.out.println("※※※※※※ 관리자입니다. ※※※※※※");
        }
    }

}

public class Main {
    public static void main(String[] args) {
        DataBase db = new DataBase();
        Scanner s = new Scanner(System.in);
        String input = "";
        String id = "";
        String pw = "";

        db.register("asd","asd");
        db.register("abc","abc");

        do {
            if (db.isADMIN()) System.out.println("111. (관리자) 모든 회원정보");
            if (db.isADMIN()) System.out.println("222. (관리자) 계정 생성");
            System.out.println(db.isLoggedIn() ? "":"0. 회원가입");
            System.out.println("1. " + (db.isLoggedIn() ? "로그아웃" : "로그인"));
            if (db.isLoggedIn()) System.out.println("2. 회원정보");
            if (db.isLoggedIn() && !db.isADMIN()) System.out.println("3. 비밀번호 변경");


            System.out.println("9. 종료");

            System.out.println(">>");

            input = s.nextLine().trim().toLowerCase();

            switch (input) {
                case "0": {
                    if (db.isLoggedIn()){
                        System.out.println("이미 로그인 되어 있습니다.");
                        continue;
                    }

                    db.register();
                    break;
                }
                case "1": {
                    if (db.isLoggedIn()){
                        db.logOut();
                        break;
                    }

                    System.out.println("아이디와 비밀번호를 입력해주세요.");
                    id = s.nextLine().trim().toLowerCase();
                    pw = s.nextLine().trim().toLowerCase();

                    db.logIn(id, pw);
                    break;
                }

                case "2":{
                    if (!db.isLoggedIn()) {
                        System.out.println("잘못된 접근입니다.");
                        continue;
                    }

                    db.getUserInfo();
                    break;
                }

                case "3":{
                    if (!db.isLoggedIn()) {
                        System.out.println("잘못된 접근입니다.");
                        continue;
                    } else if(db.isADMIN()){
                        System.out.println("관리자 아이디의 비밀번호는 임의로 바꿀 수 없습니다.");
                        continue;
                    }

                    db.changePW();
                    break;
                }
                case "9": {
                    System.exit(0);
                }
                case "000": {
                    if (db.isLoggedIn() && db.isADMIN()){
                        System.out.println("이미 관리자로 로그인되어 있습니다.");
                        continue;
                    }
                    System.out.println("※ 관리자 모드 ※");
                    System.out.println("관리자 계정으로 로그인해주세요.");
                    id = s.nextLine().trim().toLowerCase();
                    pw = s.nextLine().trim().toLowerCase();
                    db.adminLogIn(id, pw);
                    break;
                }

                case "111":{
                    if (!db.isADMIN()){
                        System.out.println("잘못된 접근입니다.");
                    } else {
                        db.getUserDate();
                    }
                }

                case "222":{
                    if (!db.isADMIN()){
                        System.out.println("잘못된 접근입니다.");
                    } else {
                        db.register();
                    }
                }
            }
        } while (true);
    }
}
